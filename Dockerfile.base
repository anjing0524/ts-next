# 使用轻量级基础镜像
FROM debian:bookworm-slim

# 配置国内镜像源（修复版）
RUN echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian bookworm main contrib non-free" > /etc/apt/sources.list \
    && echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian bookworm-updates main contrib non-free" >> /etc/apt/sources.list \
    && echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free" >> /etc/apt/sources.list

# 安装基础依赖（添加unzip）
RUN apt-get update && apt-get install -y \
    curl \
    git \
    ca-certificates \
    build-essential \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# 安装fnm管理多版本Node.js
ENV FNM_VERSION="v1.37.0"
RUN curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir /usr/local/bin

# 安装指定Node.js版本（构建时传入参数）
ARG NODE_VERSION="22.14.0"
RUN fnm install $NODE_VERSION && \
    fnm install 20 && \
    fnm install 18 && \
    fnm install 16 && \
    fnm default $NODE_VERSION && \
    # 添加fnm环境变量初始化
    echo 'eval "$(fnm env --shell=bash)"' >> ~/.bashrc && \
    # 在同一个RUN中初始化环境
    . ~/.bashrc && \
    npm install -g pnpm@latest

# 配置环境变量
ENV PATH="/root/.fnm/current/bin:$PATH"

# 设置工作目录
WORKDIR /app
# 安装构建工具和依赖
# 删除残留的Alpine专用命令（重要！）
# RUN apk add --no-cache libc6-compat
# RUN corepack enable pnpm